% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optMLE_grid2.R
\name{optMLE_grid2}
\alias{optMLE_grid2}
\title{(Rewrite) Adaptive grid search optimization to find the optimal design (optMLE)}
\usage{
optMLE_grid2(
  phI,
  phII,
  phI_strat,
  phIIa_strat = NULL,
  min_n,
  sample_on,
  indiv_score,
  return_full_grid = FALSE,
  first_step = NULL,
  max_grid_size = 10000
)
}
\arguments{
\item{phI}{Phase I sample size.}

\item{phII}{Phase II sample size.}

\item{phI_strat}{Phase I stratum sample sizes as a named list, dataframe, or vector}

\item{phIIa_strat}{For multi-wave designs, Phase II(a) stratum sample sizes as a named list, dataframe, or vector Default is \code{NULL}.}

\item{min_n}{Minimum stratum size to be sampled.}

\item{sample_on}{Columns with the Phase I variables (should be categorical) used for sampling strata (can be name or numeric index). All variables must be coded as binary.}

\item{indiv_score}{Matrix of score vectors for all parameters (returned from the \code{score} function.}

\item{return_full_grid}{If \code{TRUE}, all audits from all iterations of the grid search will be return. Default is \code{FALSE}.}

\item{first_step}{(Optional) Starting grid scale.}

\item{max_grid_size}{(Optional) Integer maxium for the largest starting grid allowed if \code{first_step = NULL}.}
}
\value{
\item{all_opt}{Optimal designs chosen in each iteration of the grid search.}
\item{min_var}{Value of the variance achieved by the optimal design in the last iteration.}
\item{min_var_design}{Optimal design in the last iteration.}
\item{findOptimal}{\code{TRUE}/\code{FALSE} for whether final iteration found an optimal design.}
\item{full_grid_search}{If \code{return_full_grid} = TRUE, a dataframe containing all grids from ann iterations.}
\item{message}{Result of the grid search, options include \code{"No valid grids"}, \code{"Singular information"}, \code{"Tie for minimum"}, \code{"Grid completed without finding minimum"}, \code{"Grid search successful"}.}
}
\description{
(Rewrite) Adaptive grid search optimization to find the optimal design (optMLE)
}
